<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.me.mapper.ItemsMapperCustom">
    <select id="queryItemComments" parameterType="map" resultType="com.me.pojo.vo.ItemCommentVO">
        SELECT ic.comment_level AS commentLevel,
        ic.content AS content,
        ic.sepc_name AS specName,
        ic.created_time AS createdTime,
        u.face AS userFace,
        u.nickname AS nickname
        FROM items_comments ic
        LEFT JOIN users u ON ic.user_id = u.id
        WHERE ic.item_id = #{paramsMap.itemId}
        <if test=" paramsMap.level != null and paramsMap.level != '' ">
            AND ic.comment_level = #{paramsMap.level}
        </if>
    </select>


    <select id="searchItems" parameterType="map" resultType="com.me.pojo.vo.SearchItemsVO">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        tempSpec.price_discount AS price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) tempSpec
        ON i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">
            <!-- 语法要求在%%之间拼接不要用#，用$。这里不可能出现sql注入攻击，具体原因见接口说明-->
            AND i.item_name LIKE '%${paramsMap.keywords}%'
        </if>
        <!-- k: 默认，代表默认排序，根据name-->
        <!-- c: 根据销量排序-->
        <!-- p: 根据价格排序-->
        ORDER BY
        <choose>
            <when test=" paramsMap.sort == &quot;c&quot; ">i.sell_counts DESC</when>
            <when test=" paramsMap.sort == &quot;p&quot; ">tempSpec.price_discount ASC</when>
            <otherwise>i.item_name ASC</otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" parameterType="map" resultType="com.me.pojo.vo.SearchItemsVO">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        tempSpec.price_discount AS price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) tempSpec
        ON i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        AND i.cat_id = #{paramsMap.catId}
        <!-- k: 默认，代表默认排序，根据name-->
        <!-- c: 根据销量排序-->
        <!-- p: 根据价格排序-->
        ORDER BY
        <choose>
            <when test=" paramsMap.sort == &quot;c&quot; ">i.sell_counts DESC</when>
            <when test=" paramsMap.sort == &quot;p&quot; ">tempSpec.price_discount ASC</when>
            <otherwise>i.item_name ASC</otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="list" resultType="com.me.pojo.vo.ShopcartVO">
        SELECT t_items.id as itemId,
        t_items.item_name as itemName,
        t_items_img.url as itemImgUrl,
        t_items_spec.id as specId,
        t_items_spec.name as specName,
        t_items_spec.price_discount as priceDiscount,
        t_items_spec.price_normal as priceNormal
        FROM items_spec t_items_spec
        LEFT JOIN items t_items
        ON t_items.id = t_items_spec.item_id
        LEFT JOIN
        items_img t_items_img
        ON t_items_img.item_id = t_items.id
        WHERE t_items_img.is_main = 1
        AND t_items_spec.id IN
        <!-- 比如(1, 3, 5) -->
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
    </select>

    <update id="decreaseItemSpecStock">
        update items_spec
        set stock = stock - #{pendingCounts}
        where id = #{specId}
          and stock >= #{pendingCounts}
    </update>
</mapper>